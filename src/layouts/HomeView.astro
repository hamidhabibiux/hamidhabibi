---
//import '../styles/HomeView.css';
import SocialIcons from '../components/SocialMediaIcons.astro';
import SocialIcons24 from '../components/socialmediaIcons24.astro';
---
<style> 

body {
    /*max-width: 679px;*/
    background-color: #FBFBFB;
}

h1 {
    font-family: 'Inter Var';
    font-size: 32px;
    font-weight: bold;
    color: #5B483E;
    margin-block: 0;
}
p {
    font-family: 'Inter Var';
    font-size: 14px;
    color: #515155;
}
span {
    font-family: 'Inter Var';
    font-size: 14px;
    color: #515155;

}

.spacedText{
    letter-spacing: .05rem;

}


/************************

        SideBar Styling

*************************/

.theHeader{
    display: flex;
    flex-direction: row;
    justify-content: space-between;
    align-items: center;
    align-self: stretch;
}

.socialIcon {
    text-decoration: none;
}

.casestudyContainer{
    display: flex;
    flex-direction: column;
    align-items: flex-start;
    gap: 1rem;
    width: 100%;
}
.indexHeroMessage {
    display: flex;
    flex-direction: column;
    gap: 1.5rem;
}

.casestudyList{
    display: flex;
    flex-direction: column;
    width: 100%;
    
}

.indexContainer{
    display: flex;
    flex-direction: column;
    align-items: flex-start;
    gap: 4rem;
}

.casestudyItem{
    display: grid;
    grid-template-columns: 2.5fr 6.5fr 1fr;
    gap: 16px;
    padding-block: 4px;
}


/*.casestudyItem:hover ~ .casestudyItem span{
    color:#C0B5AF;
}
*/
span.casestudyDate{
    text-align: right;
}

.deselected span{ /*use this for hover effect*/
    color:#C0B5AF;
}

a{
    text-decoration: none;
}


#sidebarHeroMessage{
    width: 75%;
}
span.casestudyDesc-mobile{
    display:none;
}

/**********************************

            Media Queries

**********************************/



@media screen and (max-width: 1250px){
    span.casestudyDesc-mobile{
        display:block;
    }
    span.casestudyDesc{
        display: none;
    }
    #sidebarHeroMessage{
    width: 100%;
    }
}

@media screen and (max-width: 1301px){
   span.casestudyDesc-mobile{
        display:block;
    }
    span.casestudyDesc{
        display: none;
    }
    

    .casestudyItem{
    display: grid;
    grid-template-columns: 2.5fr 6.5fr 1.5fr;
    gap: 24px;
    padding-block: 4px;
}

}
@media screen and (max-width: 1100px){
    span.casestudyDate{
        display: none;
    }

    span.casestudyDesc-mobile{
        display:block;
    }
    span.casestudyDesc{
        display: none;
    }
    .casestudyItem{
        display: grid;
        grid-template-columns: 2.5fr 7fr;
        gap: 16px;
        padding-block: 4px;
    }
    #sidebarHeroMessage{
    width: 100%;
}
}



</style>

<script>
document.addEventListener('astro:page-load', () => {   
// Get all casestudyItem elements
const casestudyItems = document.querySelectorAll('.casestudyItem');
const smallRectangleItems = document.querySelectorAll('.colorSquare');
const posterImages = document.querySelectorAll('.bigImageContainer img');
const smallRectangleText = document.querySelectorAll('.colorSquare-container p');
const colorSquareContainers = document.querySelectorAll('.colorSquare-container');
//new code
const casestudyItemsArray = Array.from(casestudyItems);


//The following lines of code affect hovers that happen on the left side

// Loop through each casestudyItem
casestudyItems.forEach(item => {
  // Add event listener for mouseover (hover)
  item.addEventListener('mouseover', () => {
    //start new code
    const hoveredIndex = Array.from(casestudyItems).indexOf(item);
    if (hoveredIndex !== -1 && hoveredIndex < posterImages.length){
        
        //this is for changing the poster shown
        posterImages[hoveredIndex].classList.add('imgLookAtMe');

        //this is for changing the rectangles styles
        smallRectangleItems.forEach((rectangle, rectIndex) => {
                if (rectIndex !== hoveredIndex) {
                    rectangle.classList.add('deselectedSquare'); // Change to desired color
                }
            });
        smallRectangleText.forEach((named, namedIndex) => {
                if (namedIndex !== hoveredIndex) {
                    named.classList.add('deselectedText');
                }
        })
    }
    //end new code

    // Loop through all items again and change text color of spans except the one being hovered
    casestudyItems.forEach(otherItem => {
      if (otherItem !== item && otherItem instanceof HTMLElement) {
        const spans = otherItem.querySelectorAll('span');
        spans.forEach(span => {
          span.style.color = '#C0B5AF'; // Change this to your desired text color
          // Change any other styles as needed
        });
      }
    });
  });

  // Add event listener for mouseout (when the mouse leaves the element)
  item.addEventListener('mouseout', () => {
    // Loop through all items again and reset text color of spans back to its original state when not hovered
    //start new code
    const hoveredIndex = Array.from(casestudyItems).indexOf(item);
    if (hoveredIndex !== -1 && hoveredIndex < posterImages.length){
        
        //this is for changing the poster shown
        posterImages[hoveredIndex].classList.remove('imgLookAtMe');

        //this is for changing the rectangles styles
        smallRectangleItems.forEach((rectangle, rectIndex) => {
                if (rectIndex !== hoveredIndex) {
                    rectangle.classList.remove('deselectedSquare'); // Change to desired color
                }
            });
            smallRectangleText.forEach((named, namedIndex) => {
                if (namedIndex !== hoveredIndex) {
                    named.classList.remove('deselectedText');
                }
        })
    }
    //end new code
    casestudyItems.forEach(otherItem => {
      if (otherItem !== item && otherItem instanceof HTMLElement) {
        const spans = otherItem.querySelectorAll('span');
        spans.forEach(span => {
          span.style.color = ''; // Reset to default or remove this line if not needed
          // Reset any other styles as needed
        });
      }
    });
  });
});


//The following lines will affect right side hovers

colorSquareContainers.forEach(item => {
  // Add event listener for mouseover (hover)
  item.addEventListener('mouseover', () => {
    //start new code
    const hoveredIndex = Array.from(colorSquareContainers).indexOf(item);
    if (hoveredIndex !== -1 && hoveredIndex < posterImages.length){
        
        //this is for changing the poster shown
        posterImages[hoveredIndex].classList.add('imgLookAtMe');

        //this is for changing the rectangles styles
        smallRectangleItems.forEach((rectangle, rectIndex) => {
                if (rectIndex !== hoveredIndex) {
                    rectangle.classList.add('deselectedSquare'); // Change to desired color
                }
            });
        smallRectangleText.forEach((named, namedIndex) => {
                if (namedIndex !== hoveredIndex) {
                    named.classList.add('deselectedText');
                }
        })
    }
    //end new code

    // Loop through all items again and change text color of spans except the one being hovered
    casestudyItems.forEach((item, itemIndex) => {
        if (itemIndex !== hoveredIndex) {
            const spans = item.querySelectorAll('span');
            spans.forEach(span => {
                span.style.color = '#C0B5AF';
            });
        };
    });
    

  });

  // Add event listener for mouseout (when the mouse leaves the element)
  item.addEventListener('mouseout', () => {
    // Loop through all items again and reset text color of spans back to its original state when not hovered
    //start new code
    const hoveredIndex = Array.from(colorSquareContainers).indexOf(item);
    if (hoveredIndex !== -1 && hoveredIndex < posterImages.length){
        
        //this is for changing the poster shown
        posterImages[hoveredIndex].classList.remove('imgLookAtMe');

        //this is for changing the rectangles styles
        smallRectangleItems.forEach((rectangle, rectIndex) => {
                if (rectIndex !== hoveredIndex) {
                    rectangle.classList.remove('deselectedSquare'); // Change to desired color
                }
            });
            smallRectangleText.forEach((named, namedIndex) => {
                if (namedIndex !== hoveredIndex) {
                    named.classList.remove('deselectedText');
                };
        });
    };
    //end new code
    casestudyItems.forEach((item, itemIndex) => {
        if (itemIndex !== hoveredIndex) {
            const spans = item.querySelectorAll('span');
            spans.forEach(span => {
                span.style.color = '';
            });
        };
    });
  });
});




});

</script>


<div class="indexContainer">
    <div class="theHeader">
        <a href="/"><h1>Hamid Habibi</h1></a>
        <a href="/about"><p>about</p></a>
    </div>
    <div class="indexHeroMessage">
        <p id="sidebarHeroMessage">Iâ€™m an anti-disciplinary designer based in the SF Bay Area. I enjoy design, sometimes coding it, and spending time with my nephew.</p>
        <SocialIcons24 />
    </div>
    <div class="casestudyContainer">
        <p class="spacedText" style="color: #E0B49B;">CASE STUDY</p>
        <div class="casestudyList">
            <a href="/brightline"><div id="brightlineItem" class="casestudyItem">
                <span class="casestudyName">Brightline</span>
                <span class="casestudyDesc">Digital health tools for providers</span><span class="casestudyDesc-mobile">Digital health tools</span>
                <span class="casestudyDate">2022</span>
            </div></a>
            <a href="/microsoft"><div id="microsoftItem" class="casestudyItem">
                <span class="casestudyName">Microsoft</span>
                <span class="casestudyDesc">Communication platform for B2B Sellers</span><span class="casestudyDesc-mobile">B2B Seller Tools</span>
                <span class="casestudyDate">2022</span>
            </div></a>
            <div id="handshakeItem" class="casestudyItem">
                <span class="casestudyName">Handshake</span>
                <span class="casestudyDesc">Skills platform for exploratory college students</span><span class="casestudyDesc-mobile">Online Skills Platform</span>
                <span class="casestudyDate">2022</span>
            </div>
            <a href="/youtube"><div id="youtubeItem" class="casestudyItem">
                <span class="casestudyName">YouTube Shorts</span>
                <span class="casestudyDesc">Dashboard for YouTube Shorts experience</span><span class="casestudyDesc-mobile">Dashboard for YouTube Shorts</span>
                <span class="casestudyDate">2023</span>
            </div></a>
            <div id="spotifyItem" class="casestudyItem">
                <span class="casestudyName">Spotify</span>
                <span class="casestudyDesc">Spotify Jam UI redesign</span><span class="casestudyDesc-mobile">Spotify Jam UI</span>
                <span class="casestudyDate">2023</span>
            </div>
        </div>
    </div>
    </div>
